Java HashMap class is an implementation of Map interface based on hash table.
 It stores elements in key & value pairs which is denoted as HashMap<Key, Value> or HashMap<K, V>.

It extends AbstractMap class, and implements Map interface and can be accessed by importing java.util package.


===========================================================
Java HashMap class implements the Map interface which allows us to store key and value pair, 
where keys should be unique. If you try to insert the duplicate key, it will replace the 
element of the corresponding key. It is easy to perform operations using the key index 
like updation, deletion, etc. HashMap class is found in the

============================================================
Points to remember
Java HashMap contains values based on the key.
Java HashMap contains only unique keys.
Java HashMap may have one null key and multiple null values.
Java HashMap is non synchronized.
Java HashMap maintains no order.
The initial default capacity of Java HashMap class is 16 with a load factor of 0.75.

============================================================

declaration 
    HashMap<Integer,String> hashMap = new HashMap<Integer,String>(); no order 
    LinkedHashMap<String,String>  insertion order consider
    TreeMap // sorting matter

void clear() :It is used to remove all of the mappings from this map.

boolean isEmpty():	It is used to return true if this map contains no key-value mappings.

Object clone()	:It is used to return a shallow copy of this HashMap instance:
 the keys and values themselves are not cloned.

Set entrySet()	:It is used to return a collection view of the mappings contained in this map.

Set keySet()	:It is used to return a set view of the keys contained in this map.

V put(Object key, Object value):	It is used to insert an entry in the map.

void putAll(Map map):	It is used to insert the specified map in the map.

V putIfAbsent(K key, V value):	It inserts the specified value with the
 specified key in the map only if it is not already specified.

V remove(Object key):	It is used to delete an entry for the specified key.
boolean remove(Object key, Object value)	It removes the specified values with the
 associated specified keys from the map.

 boolean containsValue(Object value)	This method returns true if some value equal to the value exists
 within the map, else return false.

 boolean containsKey(Object key)	This method returns true if some key equal
   to the key exists within the map, else return false.


   size and isEmpty  methods are there

